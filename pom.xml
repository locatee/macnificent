<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.martiansoftware</groupId>
    <artifactId>macnificent</artifactId>
    <packaging>jar</packaging>
    <version>0.2.0</version>
    <name>macnificent</name>

    <properties>
	    <!-- github server corresponds to entry in ~/.m2/settings.xml -->
	    <github.global.server>github</github.global.server>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.martiansoftware.macnificent.OUIRegistry</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        </execution>
                </executions>
            </plugin>
	    <plugin>
		    <artifactId>maven-deploy-plugin</artifactId>
		    <version>2.8.2</version>
		    <configuration>
			    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
		    </configuration>
	    </plugin>
	    <plugin>
		    <groupId>com.github.github</groupId>
		    <artifactId>site-maven-plugin</artifactId>
		    <version>0.10-SNAPSHOT</version>
		    <configuration>
			    <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
			    <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
			    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
			    <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
			    <includes><include>**/*</include></includes>
			    <repositoryName>macnificent</repositoryName>      <!-- github repo name -->
			    <repositoryOwner>locatee</repositoryOwner>    <!-- github username  -->
		    </configuration>
		    <executions>
			    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
			    <execution>
				    <goals>
					    <goal>site</goal>
				    </goals>
				    <phase>deploy</phase>
			    </execution>
		    </executions>
	    </plugin>
        </plugins>
        
        <extensions>
            <!-- needed for ftp deploy -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>2.6</version>
            </extension>
        </extensions>
        
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.4</version>
            </plugin>
        </plugins>
    </reporting>

    <distributionManagement>
	    <repository>
		    <id>internal.repo</id>
		    <name>Temporary Staging Repository</name>
		    <url>file://${project.build.directory}/mvn-repo</url>
	    </repository>
    </distributionManagement>

</project>
